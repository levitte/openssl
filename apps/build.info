{- our @apps_openssl_src =
       qw(openssl.c
          asn1pars.c ca.c cms.c crl.c crl2p7.c dgst.c enc.c engine.c
          errstr.c genpkey.c nseq.c ocsp.c passwd.c pkcs12.c pkcs7.c pkcs8.c
          pkey.c pkeyparam.c pkeyutl.c prime.c rand.c req.c smime.c spkac.c
          srp.c ts.c verify.c version.c x509.c rehash.c storeutl.c speed.c);
   our @apps_openssl_ignored_src =
       qw(dhparam.c
          gendsa.c dsa.c dsaparam.c
          ec.c ecparam.c
          genrsa.c rsa.c rsautl.c
          ciphers.c
          s_client.c s_server.c s_time.c sess_id.c);

   our @apps_lib_src =
       ( qw(apps.c opt.c app_rand.c bf_prefix.c),
         split(/\s+/, $target{apps_aux_src}) );
   our @apps_lib_ignored_src =
       ( qw(s_cb.c s_socket.c),
         split(/\s+/, $target{apps_aux_src}) );

   our @apps_init_src = split(/\s+/, $target{apps_init_src});
   "" -}
IF[{- !$disabled{apps} -}]
  LIBS_NO_INST=libapps.a
  SOURCE[libapps.a]={- join(" ", @apps_lib_src) -}
  INCLUDE[libapps.a]=.. ../include

  PROGRAMS=openssl
  SOURCE[openssl]={- join(" ", @apps_init_src) -}
  SOURCE[openssl]={- join(" ", @apps_openssl_src) -}
  INCLUDE[openssl]=.. ../include
  DEPEND[openssl]=libapps.a ../libosslcompat ../libcrypto

IF[{- $config{target} =~ /^(?:Cygwin|mingw|VC-)/ -}]
  GENERATE[openssl.rc]=../util/mkrc.pl openssl
  SOURCE[openssl]=openssl.rc
ENDIF

  {- join("\n  ", map { (my $x = $_) =~ s|\.c$|.o|; "DEPEND[$x]=progs.h" }
                  @apps_openssl_src) -}
  GENERATE[progs.h]=progs.pl $(APPS_OPENSSL)
  DEPEND[progs.h]=../configdata.pm

  SCRIPTS=CA.pl tsget.pl
  SOURCE[CA.pl]=CA.pl.in
  SOURCE[tsget.pl]=tsget.in
ENDIF
